name: Docker image CI

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**/README.md'

jobs:
  build:
    name: Build and publish Docker image to Docker Hub and GitHub Containers Repository
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Generate Github Container Registry Image Name
      uses: mad9000/actions-find-and-replace-string@3
      id: ghcrio_image_name
      with:
        source: ${{ github.repository }}
        find: '_Docker'
        replace: ''

    - name: Generate Docker Hub Image Name
      uses: mad9000/actions-find-and-replace-string@3
      id: dockerhub_image_name
      with:
        source: ${{ steps.ghcrio_image_name.outputs.value }}
        find: ${{ github.repository_owner }}
        replace: ${{ secrets.DOCKERHUB_USERNAME }}
      
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ steps.docker_image_name.outputs.value }}
          ghcr.io/${{ steps.ghcrio_image_name.outputs.value }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
        
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker Build and Push to GHCR.io
      run: |
        docker build -t ${{ steps.ghcrio_image_name.outputs.value }}:latest .
        docker push ${{ steps.ghcrio_image_name.outputs.value }}:latest
    - name: Docker Build and Push to DockerHub
      run: |
        docker build -t ${{ steps.docker_image_name.outputs.value }}:latest .
        docker push ${{ steps.docker_image_name.outputs.value }}:latest
